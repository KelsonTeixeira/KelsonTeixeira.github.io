{"version":3,"sources":["Pages/Login/img/logo.png","auth/auth.js","auth/RouterRedirect.js","services/Api.js","Pages/Login/index.js","Components/Bar/index.js","Components/About/index.js","Components/Works/index.js","Components/Testimonials/index.js","Components/Calendar/index.js","Components/Works/WorkUpdate/index.js","Components/Testimonials/Add/index.js","Components/Testimonials/Edit/index.js","Components/Testimonials/Delete/index.js","Components/Testimonials/EditClient/index.js","Components/Calendar/Add/months.js","Components/Calendar/Add/index.js","Components/Calendar/Edit/index.js","Components/Calendar/Delete/index.js","Components/Calendar/EditEvent/index.js","router/PageRouter.js","Components/LogOff/index.js","Components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","isAuthenticated","localStorage","getItem","LogOff","removeItem","window","location","replace","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","PublicRoute","HomeRoute","Api","axios","create","baseURL","interceptors","request","use","config","a","async","token","headers","Login","username","password","register","registerClass","display","loginClass","isRegisterClass","isLoginClass","registerShow","setState","loginShow","loginSubmit","e","preventDefault","user","post","then","response","login","data","catch","err","registerSubmit","newUser","status","className","src","Logo","alt","style","this","onSubmit","type","placeholder","onChange","target","value","onClick","React","SideBar","activeStyle","color","fontWeight","borderBottom","exact","About","text","update","componentDidMount","get","about","aboutUpdate","confirm","title","section","_id","newAbout","put","required","Works","works","map","work","key","Testimonials","Calendar","WorkUpdate","id","match","params","info","newWork","Add","name","job","opinion","selectImage","addTestimonial","img_url","newClient","addImage","fd","FormData","append","url","files","Edit","console","log","client","Delete","loadClients","clientDelete","delete","alert","EditClient","imgChanged","newImage","clientUpdate","testimonial","handleUpdate","scrollTo","document","body","scrollHeight","months","date","month","resume","time","link","addEvent","newEvent","setDate","slice","newDate","monthList","parseInt","event","loadevents","eventDelete","EditEvent","eventUpdate","updatedEvent","Router","Bar","path","TestimonialAdd","TestimonialEdit","TestimonialDelete","TestimonialEditClient","CalendarAdd","CalendarEdit","CalendarDelete","CalendarEditEvent","Logged","Header","App","PageRouter","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e4717bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8009ca3b.png\";","export const isAuthenticated = () => {\n    const token = localStorage.getItem('token');\n    if(token !== null){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nexport const TakeToken = () => {\n    const { token } = localStorage;\n    return token;\n}\n\nexport const LogOff = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('login');\n    window.location.replace('/login');\n}","import React from 'react';\nimport { isAuthenticated } from './auth';\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        isAuthenticated() ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to={{ pathname: '/login', state: {from: props.location} }} />\n        )\n    )} />\n);\n\nexport const PublicRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        isAuthenticated() ? (\n            <Redirect to={{ pathname: '/sobre', state: {from: props.location} }} />\n        ) : (\n            <Component {...props} />\n        )\n    )} />\n);\n\nexport const HomeRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        isAuthenticated() ? (\n            <Redirect to={{ pathname: '/sobre', state: {from: props.location} }} />\n        ) : (\n            <Redirect to={{ pathname: '/login', state: {from: props.location} }} />\n        )\n    )} />\n);","import axios from 'axios';\n\nimport { TakeToken } from '../auth/auth';\n\nconst Api = axios.create({ baseURL: 'https://brasileiro-api.herokuapp.com' });\n\nApi.interceptors.request.use(async config => {\n    const token = await TakeToken();\n\n    config.headers.token = token;\n    \n    return config;\n});\n\nexport default Api;","import React from 'react';\nimport Api from '../../services/Api';\n\nimport './style.css';\nimport Logo from './img/logo.png';\n\nexport default class Login extends React.Component{\n\n    state = {\n        username: '',\n        password: '',\n        register: '',\n        registerClass: {\n            display: 'none'\n        },\n        loginClass: {\n            display: 'flex'\n        },\n        isRegisterClass: {\n            display: 'none'\n        },\n        isLoginClass: {\n            display: 'none'\n        }\n    }\n\n    registerShow = () => {\n        this.setState({\n            registerClass: {\n                display: 'flex',\n            },\n            loginClass: {\n                display: 'none'\n            },\n            username: '',\n            password: '',\n            register: '',\n        });\n    }\n\n    loginShow = () => {\n        this.setState({\n            registerClass: {\n                display: 'none',\n            },\n            loginClass: {\n                display: 'flex'\n            },\n            username: '',\n            password: '',\n            register: '',\n        });\n    }\n\n    loginSubmit = async (e) => {\n        e.preventDefault();\n        const { username, password } = this.state;\n        const user = {\n            username, \n            password,\n        }\n\n        await Api.post('/auth/login', user)\n        .then(response => {\n            localStorage.login = response.data.login;\n            localStorage.token = response.data.token;\n            window.location.replace(\"/sobre\");\n        })\n        .catch(err => {\n            this.setState({ isLoginClass: {\n                display: 'inline-flex'\n            }});\n        });\n    }\n\n    registerSubmit = async (e) => {\n        e.preventDefault();\n        const { username, password, register } = this.state;\n        const newUser = {\n            username, \n            password,\n            register\n        }\n        \n        const isRegister = await Api.post('/auth/register', newUser);\n        if(isRegister.status === 200){\n            this.setState({ isRegisterClass: {\n                display: 'inline-flex'\n            }});\n            this.loginShow();\n        }\n    }\n    \n\n    render(){\n\n        return(\n            <div className='login'>\n                <img src={Logo} alt='logo' />\n                <form \n                    className='login-form' \n                    style={this.state.loginClass}\n                    onSubmit={e => {this.loginSubmit(e)}}\n                >\n                    <label>Login</label>\n                    <input \n                        type='text' \n                        placeholder='username' \n                        onChange={e => this.setState({ username: e.target.value })} \n                    />\n                    <label>Senha</label>\n                    <input \n                        type='password' \n                        placeholder='password'\n                        onChange={e => this.setState({ password: e.target.value })}\n                    />\n                    <button type='submit'>Login</button>\n                </form>\n                <form \n                    className='register-form' \n                    style={this.state.registerClass} \n                    onSubmit={e => {this.registerSubmit(e)}}\n                >\n                    <label>Novo Username</label>\n                    <input \n                        type='text' \n                        placeholder='username'\n                        onChange={e => this.setState({ username: e.target.value })}\n                        />\n                    <label>Crie sua senha</label>\n                    <input \n                        type='password' \n                        placeholder='password'\n                        onChange={e => this.setState({ password: e.target.value })}\n                        />\n                    <label>Senha do administrador</label>\n                    <input \n                        type='password' \n                        placeholder='admin password'\n                        onChange={e => this.setState({ register: e.target.value })}\n                        />\n                    <button type='submit' >Registrar</button>\n                </form>\n                <p onClick={this.registerShow} style={this.state.loginClass}>Resgistrar</p>\n                <p onClick={this.loginShow} style={this.state.registerClass}>Login</p>\n                <div className='is-register' style={this.state.isRegisterClass}>\n                    <p>Novo usuário registrado!</p>\n                    <i className=\"fas fa-check\"></i>\n                </div>\n                <div className='is-login' style={this.state.isLoginClass}>\n                    <p>Senha ou usuário incorreto!</p>\n                    <i className=\"fas fa-times\"></i>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { isAuthenticated } from '../../auth/auth';\nimport { NavLink } from 'react-router-dom';\n\nimport './style.css';\n\nconst SideBar = () => {\n    if(isAuthenticated()){\n        return(\n            <div className='side-bar'>\n                <NavLink activeStyle={\n                    {color: '#000',\n                    fontWeight: 'bold',\n                    borderBottom: '2px solid #e36209'}\n                }exact to='/sobre'>Sobre</NavLink>\n\n                <NavLink activeStyle={\n                    {color: '#000',\n                    fontWeight: 'bold',\n                    borderBottom: '2px solid #e36209'}\n                } \n                to='/servicos'>Serviços</NavLink>\n\n                <NavLink activeStyle={\n                    {color: '#000',\n                    fontWeight: 'bold',\n                    borderBottom: '2px solid #e36209'}\n                } \n                to='/depoimentos'>Depoimentos</NavLink>\n\n                <NavLink activeStyle={\n                    {color: '#000',\n                    fontWeight: 'bold',\n                    borderBottom: '2px solid #e36209'}\n                } \n                to='/agenda'>Agenda</NavLink>\n            </div>\n        )\n    }else{\n        return null;\n    }\n}\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport Api from '../../services/Api';\n\nimport './style.css';\n\nexport default class About extends Component {\n    state = {\n        data: {},\n        text: '',\n        update: ''\n    }\n\n    componentDidMount = async () => {\n        const about = await Api.get('/database/information/section/sobre');\n        this.setState({\n            data: about.data[0]\n        });\n        this.setState({\n            text: about.data[0].text\n        })\n    }\n\n    aboutUpdate = (e) => {\n        e.preventDefault();\n        let confirmation = window.confirm(\n            'Atualizar a sessão \"Sobre\" do site Brasileiro Films?');\n        if(confirmation === true){\n            const { title, section, _id } = this.state.data;\n            const { text } = this.state; \n            const newAbout = { title, section, text};\n\n            Api.put(`/database/information/${_id}`, newAbout)\n            .then(response => {\n                if(response.status=== 200){\n                    this.setState({ update: 'Atualizado!'});\n                }\n            })\n            .catch(err => {\n                this.setState({\n                    update: 'Aparentemente você não está logado...'\n                })\n            });\n        }\n    }\n\n    render() {\n        const { data, update } = this.state;\n        return (\n            <div className='about'>\n                <h1>{data.title}</h1>\n                <form onSubmit={e => this.aboutUpdate(e)}>\n                    <label>Texto:</label>\n                    <textarea \n                        type='text' \n                        value={this.state.text} \n                        required\n                        onChange={e => {this.setState({text: e.target.value })}} \n                    />\n                    <button type='submit'>Atualizar</button>\n                </form>\n                <p>{update}</p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Api from '../../services/Api';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nexport default class Works extends Component {\n    state = {\n        data: [],\n    }\n\n    componentDidMount = async () => {\n        const works = await Api.get('/database/information/section/servicos')\n        this.setState({\n            data: works.data\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        return (\n            <div className='works'>{\n                data.map(work => {\n                    return(\n                    <article key={work._id}>\n                        <strong>{work.title}</strong>\n                        <p>{work.text}</p>\n                        <Link to={`/servicos/update/${work._id}`}>Editar</Link>\n                    </article>\n                )})\n            }</div>\n        );\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nconst Testimonials = () => (\n    <div className='testimonials'>\n        <ul>\n            <Link to='/depoimentos/add'>Add Novo Depoimento</Link>\n            <Link to='/depoimentos/edit'>Editar Depoimento</Link>\n            <Link to='/depoimentos/delete'>Excluir depoimento</Link>\n        </ul>\n    </div>\n);\n\nexport default Testimonials;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nconst Calendar = () => (\n    <div className='calendar'>\n        <ul>\n            <Link to='/agenda/add'>Add Novo Evento</Link>\n            <Link to='/agenda/edit'>Editar Evento</Link>\n            <Link to='/agenda/delete'>Excluir Evento</Link>\n        </ul>\n    </div>\n);\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\n\nimport './style.css';\n\nexport default class WorkUpdate extends Component {\n    state = {\n        data: {},\n        title: '',\n        text: '',\n    }\n\n    componentDidMount = async () => {\n        const { id } = this.props.match.params;\n        const data = await Api.get(`/database/information/id/${id}`);\n        this.setState({ \n            data: data.data,\n            title: data.data.title,\n            text: data.data.text,\n            update: ''\n        });\n    }\n\n    WorkUpdate = async (e) => {\n        e.preventDefault();\n        let confirmation = window.confirm(\n            `Atualizar a sessão \"${this.state.title}\" do site Brasileiro Films?`);\n        if(confirmation === true){\n            const { section, _id, info } = this.state.data;\n            const { text, title } = this.state; \n            const newWork = { title, section, text, info};\n\n            Api.put(`/database/information/${_id}`, newWork)\n            .then(response => {\n                if(response.status=== 200){\n                    this.setState({ update: 'Atualizado!'});\n                }\n            })\n            .catch(err => {\n                this.setState({\n                    update: 'Aparentemente você não está logado...'\n                })\n            });\n        }\n    }\n\n    render() {\n        const { text, title, update } = this.state;\n        return (\n            <div className='work-update'>\n                <form onSubmit={e => {this.WorkUpdate(e)}}>\n                    <label>Título:</label>\n                    <input \n                        type='text'\n                        value={title}\n                        onChange={e => this.setState({ title: e.target.value })}\n                    />\n                    <label>Texto:</label>\n                    <textarea\n                        value={text}\n                        onChange={e => this.setState({ text: e.target.value })}\n                    ></textarea>\n                    <button type='submit'>Atualizar</button>\n                    <p>{update}</p>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\n\nimport './style.css';\n\nexport default class Add extends Component {\n  state = {\n    name: '',\n    job: '',\n    opinion: '',\n    selectImage: null\n  }\n\n  addTestimonial = (img_url) => {\n    const { name, job, opinion } = this.state;\n    const newClient = {\n      name,\n      job,\n      opinion,\n      img_url\n    }\n    Api.post('/database/client', newClient)\n    .then(response => {\n      this.setState({ update: 'Novo depoimento adicionado!'});\n    })\n    .catch(err => {\n      this.setState({ update: 'Algo deu errado, tente novamente'});\n    })\n  }\n\n  addImage = async (e) => {\n    e.preventDefault();\n    this.setState({ update: 'Wait...'});\n\n    const fd = new FormData();\n    fd.append('file', this.state.selectImage, this.state.selectImage.name);\n\n    Api.post('/database/image', fd)\n    .then(response => {\n      this.addTestimonial(response.data.url);\n    })\n    .catch(err => {\n        if(err.response.status === 401){\n          this.setState({\n            update: 'Aparentemente você não está logado...'\n          })\n        }else{\n          this.setState({\n            update: 'Algo errado com o arquivo enviado!'\n          })\n        }\n    });\n  }\n\n  render() {\n    return (\n      <div className='testimonials-add'>\n        <form onSubmit={e => this.addImage(e)}>\n          <label>Foto do Cliente: (somente imagens jpg, jpeg, png até 2MB)</label>\n          <input \n            type='file'\n            required\n            onChange={e => this.setState({ selectImage: e.target.files[0] })}\n          />\n          <label>Nome do Cliente</label>\n          <input \n            type='text' \n            placeholder='nome'\n            required\n            onChange={e => this.setState({ name: e.target.value})}\n          />\n          <label>\"Trabalho\" do Cliente</label>\n          <input \n            type='text' \n            placeholder='job' \n            required\n            onChange={e => this.setState({ job: e.target.value})}\n          />\n          <label>Depoimento</label>\n          <textarea\n            required\n            onChange={e => this.setState({ opinion: e.target.value})}\n          ></textarea>\n          <button type='submit'>Create</button>\n          <p>{this.state.update}</p>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nexport default class Edit extends Component {\n  state = {\n    data: []\n  }\n\n  componentDidMount = async () => {\n    const data = await Api.get('/database/client');\n\n    this.setState({ data: data.data});\n\n    console.log(this.state.data);\n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n        <div className='testimonials-edit'>{\n          data.map(client => (\n            <article key={client._id}>\n              <img src={client.img_url} alt='profile_img' />\n              <p>{client.opinion}</p>\n              <strong>{client.name}</strong>\n              <strong>{client.job}</strong>\n              <Link to={`/depoimentos/edit/client/${client._id}`}>Editar</Link>\n            </article>\n          ))\n        }</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\n\nimport './style.css';\n\nexport default class Delete extends Component {\n  state = {\n    data: []\n  }\n\n  loadClients = async () => {\n    const data = await Api.get('/database/client');\n\n    this.setState({ data: data.data });\n  }\n\n  clientDelete = (id, name) => {\n    let confirmation = window.confirm(\n      `Excluir o depoimento de ${name}?`\n    );\n    if(confirmation === true){\n      Api.delete(`/database/client/${id}`)\n      .then(response => {\n        this.loadClients();\n      })\n      .catch(err => {\n        alert('Algo deu Errado...');\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    this.loadClients();\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className='testimonials-delete' >{\n        data.map(client => (\n          <article key={client._id}>\n              <img src={client.img_url} alt='profile_img' />\n              <strong>{client.name}</strong>\n              <strong>{client.job}</strong>\n              <button \n                type='button' \n                onClick={e => this.clientDelete(client._id, client.name)}\n              >Excluir</button>\n            </article>\n        ))\n      } </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\n\nimport './style.css';\n\nexport default class EditClient extends Component {\n    state= {\n        data: [],\n        name: '',\n        job: '',\n        opinion: '',\n        img_url: '',\n        id: '',\n        selectImage: null,\n        imgChanged: false,\n        update: ''\n    }\n\n    newImage = () => {\n        const fd = new FormData();\n        fd.append('file', this.state.selectImage, this.state.selectImage.name);\n\n        Api.post('/database/image', fd)\n        .then(response => {\n            this.setState({ \n                update: 'Nova imagem adicionada!',\n                img_url: response.data.url\n            });\n        })\n        .then(response => this.clientUpdate())\n        .catch(err => {\n            if(err.response.status === 401){\n            this.setState({\n                update: 'Aparentemente você não está logado...'\n            })\n            }else{\n            this.setState({\n                update: 'Algo errado com o arquivo enviado!'\n            })\n            }\n        });\n    }\n\n    clientUpdate = () => {\n        const { name, job, opinion, img_url } = this.state;\n        console.log(img_url);\n\n        const testimonial = { name, job, opinion, img_url };\n\n        Api.put(`database/client/${this.state.id}`, testimonial)\n        .then(response => this.setState({ update: 'Depoimento Atualizado!'}))\n        .catch(err => {\n            if(err.response.status === 401){\n                this.setState({\n                    update: 'Aparentemente você não está logado...'\n                })\n            }else{\n                this.setState({\n                    update: 'Algo deu errado, tente novamente!'\n                })\n            }\n        });\n    }\n\n\n\n    handleUpdate = async (e) => {\n        e.preventDefault();\n        this.setState({ update: 'Wait...'});\n\n        if(this.state.imgChanged) {\n            this.newImage();\n        }else{\n            this.clientUpdate();\n        }        \n    }\n\n    componentDidMount = async () => {\n        const { id } = this.props.match.params;\n\n        const data = await Api.get(`database/client/${id}`);\n        \n        const { name, job, opinion, img_url} = data.data;\n\n        this.setState({ data, name, job, opinion, img_url, id });\n\n        window.scrollTo(0,document.body.scrollHeight);\n    }\n\n    render() {\n        const { name, job, opinion, img_url } = this.state;\n\n        return (\n            <div className='edit-client'>\n                <form onSubmit={e => this.handleUpdate(e)}>\n                    <img src={img_url} alt='profile_image' />\n                    <label \n                        className='file' \n                    >Trocar imagen do cliente: (somente imagens jpg, jpeg, png até 2MB)</label>\n                    <input \n                        type='file'\n                        id='file'\n                        onChange={e => this.setState({ \n                            selectImage: e.target.files[0],\n                            imgChanged: true\n                        })}\n                    />\n                    <label>Nome do Cliente</label>\n                    <input \n                        type='text' \n                        placeholder='nome'\n                        value={name}\n                        onChange={e => this.setState({ name: e.target.value})}\n                    />\n                    <label>Profissão</label>\n                    <input \n                        type='text' \n                        placeholder='Profissão' \n                        value={job}\n                        onChange={e => this.setState({ job: e.target.value})}\n                    />\n                    <label>Depoimento</label>\n                    <textarea\n                        value={opinion}\n                        onChange={e => this.setState({ opinion: e.target.value})}\n                    ></textarea>\n                    <button type='submit'>Atualizar</button>\n                    <p>{this.state.update}</p>\n                </form>\n            </div>\n        );\n    }\n}\n","const months = [\n  'janeiro',\n  'fevereiro',\n  'marco',\n  'abril',\n  'maio',\n  'junho',\n  'julho',\n  'agosto',\n  'setembro',\n  'outubro',\n  'novembro',\n  'dezembro'\n];\n\nexport default months;\n\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\nimport monthList from './months';\n\nimport './style.css';\n\nexport default class Add extends Component {\n  state = {\n    name: '',\n    date: '',\n    month: '',\n    resume: '',\n    time: '',\n    location: '',\n    link: '',\n    selectImage: null,\n    update: ''\n  }\n\n  addEvent = (img_url) => {\n    const { name, date, month, resume, time, location, link } = this.state;\n    const newEvent = {\n      name,\n      date,\n      resume,\n      time,\n      location,\n      link,\n      month,\n      img_url\n    }\n    Api.post('/database/calendar', newEvent)\n    .then(response => {\n      this.setState({ update: 'Novo Evento adicionado!'});\n    })\n    .catch(err => {\n      this.setState({ update: 'Algo deu errado, tente novamente'});\n    })\n  }\n\n  addImage = async (e) => {\n    e.preventDefault();\n    this.setState({ update: 'Wait...'});\n    const fd = new FormData();\n    fd.append('file', this.state.selectImage, this.state.selectImage.name);\n\n    Api.post('/database/image', fd)\n    .then(response => {\n      this.addEvent(response.data.url);\n    })\n    .catch(err => {\n        if(err.response.status === 401){\n          this.setState({\n            update: 'Aparentemente você não está logado...'\n          })\n        }else{\n          this.setState({\n            update: 'Algo errado com o arquivo enviado!'\n          })\n        }\n    });\n  }\n\n  setDate = (date) => {\n    const month = date.slice(5,7);\n    const newDate = `${date.slice(8)}/${month}/${date.slice(0, 4)}`;\n\n\n    this.setState({\n        date: newDate,\n        month: monthList[parseInt(month) - 1]\n    })\n}\n\n  render() {\n    return (\n      <div className='calendar-add'>\n        <form onSubmit={e => this.addImage(e)}>\n          <label>Foto do Evento: (somente imagens jpg, jpeg, png até 2MB)</label>\n          <input \n            type='file'\n            required\n            onChange={e => this.setState({ selectImage: e.target.files[0] })}\n          />\n          <label>Nome do Evento:</label>\n          <input \n            type='text' \n            placeholder='nome do evento'\n            required\n            onChange={e => this.setState({ name: e.target.value})}\n          />\n          <label>Data do evento:</label>\n          <input \n            type='date' \n            required\n            onChange={e => this.setDate(e.target.value)}\n          />\n          <label>Hora do evento:</label>\n          <input \n            type='time' \n            required\n            onChange={e => this.setState({ time: e.target.value})}\n          />\n          <label>Local do evento:</label>\n          <input \n            type='text' \n            required\n            onChange={e => this.setState({ location: e.target.value})}\n          />\n          <label>Resumo sobre o evento:</label>\n          <textarea\n            required\n            onChange={e => this.setState({ resume: e.target.value})}\n          ></textarea>\n          <label>Link para a página do evento:</label>\n          <input\n            required\n            onChange={e => this.setState({ link: e.target.value})}\n          ></input>\n          <button type='submit'>Adicionar</button>\n          <p>{this.state.update}</p>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nexport default class Edit extends Component {\n  state = {\n    data: []\n  }\n\n  componentDidMount = async () => {\n    const data = await Api.get('/database/calendar');\n\n    this.setState({ data: data.data});\n\n    console.log(this.state.data);\n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n        <div className='calendar-edit'>{\n          data.map(event => (\n            <article key={event._id}>\n              <img src={event.img_url} alt='event_img' />\n              <strong>{event.name}</strong>\n              <strong>{event.date}</strong>\n              <Link to={`/agenda/edit/event/${event._id}`}>Editar</Link>\n            </article>\n          ))\n        }</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\n\nimport './style.css';\n\nexport default class Delete extends Component {\n  state = {\n    data: []\n  }\n\n  loadevents = async () => {\n    const data = await Api.get('/database/calendar');\n\n    this.setState({ data: data.data });\n  }\n\n  eventDelete = (id, name) => {\n    let confirmation = window.confirm(\n      `Excluir Evento: ${name}?`\n    );\n    if(confirmation === true){\n      Api.delete(`/database/calendar/${id}`)\n      .then(response => {\n        this.loadevents();\n      })\n      .catch(err => {\n        alert('Algo deu Errado...');\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    this.loadevents();\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className='calendar-delete' >{\n        data.map(event => (\n          <article key={event._id}>\n              <img src={event.img_url} alt='profile_img' />\n              <strong>{event.name}</strong>\n              <strong>{event.date}</strong>\n              <button \n                type='button' \n                onClick={e => this.eventDelete(event._id, event.name)}\n              >Excluir</button>\n            </article>\n        ))\n      } </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Api from '../../../services/Api';\n\nimport './style.css';\n\nexport default class EditEvent extends Component {\n    state= {\n        data: [],\n        name: '', \n        date: '', \n        month: null,\n        resume: '', \n        time: '', \n        location: '', \n        img_url: '',\n        link: '',\n        id: '',\n        selectImage: null,\n        imgChanged: false,\n        update: ''\n    }\n\n    newImage = () => {\n        const fd = new FormData();\n        fd.append('file', this.state.selectImage, this.state.selectImage.name);\n\n        Api.post('/database/image', fd)\n        .then(response => {\n            this.setState({ \n                update: 'Nova imagem adicionada!',\n                img_url: response.data.url\n            });\n        })\n        .then(response => this.eventUpdate())\n        .catch(err => {\n            if(err.response.status === 401){\n            this.setState({\n                update: 'Aparentemente você não está logado...'\n            })\n            }else{\n            this.setState({\n                update: 'Algo errado com o arquivo enviado!'\n            })\n            }\n        });\n    }\n\n    eventUpdate = () => {\n        const { name, date, month, resume, time, location, img_url, link } = this.state;\n\n        const updatedEvent = { name, date, month, resume, time, location, img_url, link };\n\n        Api.put(`database/calendar/${this.state.id}`, updatedEvent)\n        .then(response => this.setState({ update: 'Evento Atualizado!'}))\n        .catch(err => {\n            if(err.response.status === 401){\n                this.setState({\n                    update: 'Aparentemente você não está logado...'\n                })\n            }else{\n                this.setState({\n                    update: 'Algo deu errado, tente novamente!'\n                })\n            }\n        });\n    }\n\n\n\n    handleUpdate = async (e) => {\n        e.preventDefault();\n        this.setState({ update: 'Wait...'});\n\n        if(this.state.imgChanged) {\n            this.newImage();\n        }else{\n            this.eventUpdate();\n        }        \n    }\n\n    setDate = (date) => {\n        const month = date.slice(5,7);\n        const newDate = `${date.slice(8)}/${month}/${date.slice(0, 4)}`;\n\n        this.setState({\n            date: newDate,\n            month\n        })\n    }\n\n    componentDidMount = async () => {\n        const { id } = this.props.match.params;\n        console.log(id);\n\n        const data = await Api.get(`/database/calendar/id/${id}`);\n        \n        const { name, date, resume, time, location, img_url, link} = data.data;\n\n        this.setState({ data, name, date, resume, time, location, img_url, id, link });\n    }\n\n    render() {\n        const { name, date, resume, time, location, img_url, link } = this.state;\n\n        return (\n            <div className='edit-event'>\n                <form onSubmit={e => this.handleUpdate(e)}>\n                    <img src={img_url} alt='profile_image' />\n                    <label>Foto do Evento: (somente imagens jpg, jpeg, png até 2MB)</label>\n                    <input \n                        type='file'\n                        onChange={e => this.setState({ \n                            selectImage: e.target.files[0],\n                            imgChanged: true \n                        })}\n                    />\n                    <label>Nome do Evento:</label>\n                    <input \n                        type='text' \n                        placeholder='nome do evento'\n                        value={name}\n                        onChange={e => this.setState({ name: e.target.value})}\n                    />\n                    <label>{`Data atual: ${date}`}</label>\n                    <input \n                        type='date' \n                        value={date}\n                        onChange={e => this.setDate(e.target.value)}\n                    />\n                    <label>Hora do evento:</label>\n                    <input \n                        type='time' \n                        value={time}\n                        onChange={e => this.setState({ time: e.target.value})}\n                    />\n                    <label>Local do evento:</label>\n                    <input \n                        type='text' \n                        value={location}\n                        onChange={e => this.setState({ location: e.target.value})}\n                    />\n                    <label>Resumo sobre o evento:</label>\n                    <textarea\n                        value={resume}\n                        onChange={e => this.setState({ resume: e.target.value})}\n                    ></textarea>\n                    <label>Link para a página do evento:</label>\n                    <input\n                        value={link}\n                        onChange={e => this.setState({ link: e.target.value})}\n                    ></input>\n                    <button type='submit'>Editar</button>\n                    <p>{this.state.update}</p>\n                </form>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\n\nimport { PrivateRoute, PublicRoute, HomeRoute } from '../auth/RouterRedirect';\n\nimport Login from '../Pages/Login';\nimport Bar from '../Components/Bar';\nimport About from '../Components/About';\nimport Works from '../Components/Works';\nimport Testimonials from '../Components/Testimonials';\nimport Calendar from '../Components/Calendar';\nimport WorkUpdate from '../Components/Works/WorkUpdate';\nimport TestimonialAdd from '../Components/Testimonials/Add';\nimport TestimonialEdit from '../Components/Testimonials/Edit';\nimport TestimonialDelete from '../Components/Testimonials/Delete';\nimport TestimonialEditClient from '../Components/Testimonials/EditClient';\nimport CalendarAdd from '../Components/Calendar/Add';\nimport CalendarEdit from '../Components/Calendar/Edit';\nimport CalendarDelete from '../Components/Calendar/Delete';\nimport CalendarEditEvent from '../Components/Calendar/EditEvent';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Bar />\n        <Switch>\n            <HomeRoute exact path='/' />\n            <PublicRoute exact path='/login' component={Login} />\n            <PrivateRoute exact path='/sobre' component={About} />\n            <PrivateRoute exact path='/servicos' component={Works} />\n            <PrivateRoute exact path='/depoimentos' component={Testimonials} />\n            <PrivateRoute exact path='/agenda' component={Calendar} />\n            <PrivateRoute exact path='/servicos/update/:id' component={WorkUpdate} />\n            <PrivateRoute exact path='/depoimentos/add' component={TestimonialAdd} />\n            <PrivateRoute exact path='/depoimentos/edit' component={TestimonialEdit} />\n            <PrivateRoute exact path='/depoimentos/delete' component={TestimonialDelete} />\n            <PrivateRoute exact path='/depoimentos/edit/client/:id' component={TestimonialEditClient} />\n            <PrivateRoute exact path='/agenda/add' component={CalendarAdd} />\n            <PrivateRoute exact path='/agenda/edit' component={CalendarEdit} />\n            <PrivateRoute exact path='/agenda/delete' component={CalendarDelete} />\n            <PrivateRoute exact path='/agenda/edit/event/:id' component={CalendarEditEvent} />\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { isAuthenticated, LogOff } from '../../auth/auth';\n\nimport './style.css';\n\nconst Logged = () => {\n  if(isAuthenticated()){\n    return (<p onClick={LogOff} className='log-off'>Log off</p>);\n  }else{\n    return null;\n  }\n}\n\nexport default Logged;\n","import React from 'react';\n\nimport './style.css';\n\nimport LogOff from '../LogOff';\n\nconst Header = () => (\n    <div className='header'>\n        Brasileiro Films Admin\n        <LogOff />\n    </div>\n);\n\nexport default Header;\n","import React from 'react';\n\nimport './App.css';\n\nimport PageRouter from './router/PageRouter';\nimport Header from './Components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header />\n     <PageRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}